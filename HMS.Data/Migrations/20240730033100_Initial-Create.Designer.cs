// <auto-generated />
using System;
using HMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMS.Data.Migrations
{
    [DbContext(typeof(HMSDbContext))]
    [Migration("20240730033100_Initial-Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("HMS.Data.Models.AdministratorModel", b =>
                {
                    b.Property<Guid>("ADM_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ADM_USR_ID")
                        .HasColumnType("TEXT");

                    b.HasKey("ADM_PK");

                    b.HasIndex("ADM_USR_ID");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("HMS.Data.Models.AppointmentModel", b =>
                {
                    b.Property<Guid>("APT_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("APT_AppointmentTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("APT_DCT_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("APT_Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("APT_PAT_ID")
                        .HasColumnType("TEXT");

                    b.HasKey("APT_PK");

                    b.HasIndex("APT_DCT_ID");

                    b.HasIndex("APT_PAT_ID");

                    b.ToTable("AppointmentModels");
                });

            modelBuilder.Entity("HMS.Data.Models.DoctorModel", b =>
                {
                    b.Property<Guid>("DCT_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DCT_USR_ID")
                        .HasColumnType("TEXT");

                    b.HasKey("DCT_PK");

                    b.HasIndex("DCT_USR_ID");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("HMS.Data.Models.PatientModel", b =>
                {
                    b.Property<Guid>("PAT_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PAT_DCT_ID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PAT_USR_ID")
                        .HasColumnType("TEXT");

                    b.HasKey("PAT_PK");

                    b.HasIndex("PAT_DCT_ID");

                    b.HasIndex("PAT_USR_ID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HMS.Data.Models.STMDataModel", b =>
                {
                    b.Property<Guid>("STM_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("STM_HasSeeded")
                        .HasColumnType("INTEGER");

                    b.HasKey("STM_PK");

                    b.ToTable("StmData");
                });

            modelBuilder.Entity("HMS.Data.Models.UserModel", b =>
                {
                    b.Property<Guid>("USR_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("USR_Address_Line1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("USR_Address_Line2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("USR_Address_Postcode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("USR_Address_State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("USR_Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("USR_FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("USR_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("USR_LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("USR_Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("USR_PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("USR_PK");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HMS.Data.Models.AdministratorModel", b =>
                {
                    b.HasOne("HMS.Data.Models.UserModel", "ADM_User")
                        .WithMany()
                        .HasForeignKey("ADM_USR_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ADM_User");
                });

            modelBuilder.Entity("HMS.Data.Models.AppointmentModel", b =>
                {
                    b.HasOne("HMS.Data.Models.DoctorModel", "APT_Doctor")
                        .WithMany("DCT_Appointments")
                        .HasForeignKey("APT_DCT_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HMS.Data.Models.PatientModel", "APT_Patient")
                        .WithMany("PAT_Appointments")
                        .HasForeignKey("APT_PAT_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("APT_Doctor");

                    b.Navigation("APT_Patient");
                });

            modelBuilder.Entity("HMS.Data.Models.DoctorModel", b =>
                {
                    b.HasOne("HMS.Data.Models.UserModel", "DCT_User")
                        .WithMany()
                        .HasForeignKey("DCT_USR_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DCT_User");
                });

            modelBuilder.Entity("HMS.Data.Models.PatientModel", b =>
                {
                    b.HasOne("HMS.Data.Models.DoctorModel", "PAT_Doctor")
                        .WithMany("DCT_Patients")
                        .HasForeignKey("PAT_DCT_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HMS.Data.Models.UserModel", "PAT_User")
                        .WithMany()
                        .HasForeignKey("PAT_USR_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PAT_Doctor");

                    b.Navigation("PAT_User");
                });

            modelBuilder.Entity("HMS.Data.Models.DoctorModel", b =>
                {
                    b.Navigation("DCT_Appointments");

                    b.Navigation("DCT_Patients");
                });

            modelBuilder.Entity("HMS.Data.Models.PatientModel", b =>
                {
                    b.Navigation("PAT_Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
